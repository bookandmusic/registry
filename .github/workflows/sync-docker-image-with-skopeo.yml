name: Multi-Arch Image Replication to GHCR with Skopeo

on:
  workflow_dispatch:
    inputs:
      source_image:
        description: 'Docker Hub 镜像名称 (例如: nginx 或 library/nginx)'
        required: true
        default: 'nginx'
      source_tag:
        description: 'Docker Hub 镜像标签 (例如: 1.25.1)'
        required: true
        default: 'latest'

jobs:
  replicate:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest

    steps:
      - name: Set Variables
        id: vars
        run: |
          # 处理源镜像名称（Docker Hub）
          SOURCE_IMAGE_INPUT="${{ github.event.inputs.source_image }}"
          
          if [[ "$SOURCE_IMAGE_INPUT" != *"/"* ]]; then
            SOURCE_IMAGE_FULL="library/$SOURCE_IMAGE_INPUT"
          else
            SOURCE_IMAGE_FULL="$SOURCE_IMAGE_INPUT"
          fi
          
          IMAGE_NAME=$(echo "$SOURCE_IMAGE_FULL" | awk -F '/' '{print $NF}')
          TARGET_IMAGE="ghcr.io/${{ github.actor }}/$IMAGE_NAME"
          SOURCE_TAG="${{ github.event.inputs.source_tag }}"
          TARGET_TAG="$SOURCE_TAG"
          
          if [ -z "$TARGET_TAG" ]; then
            TARGET_TAG="latest"
          fi

          echo "SOURCE_IMAGE=docker.io/$SOURCE_IMAGE_FULL" >> $GITHUB_OUTPUT
          echo "TARGET_IMAGE=$TARGET_IMAGE" >> $GITHUB_OUTPUT
          echo "SOURCE_TAG=$SOURCE_TAG" >> $GITHUB_OUTPUT
          echo "TARGET_TAG=$TARGET_TAG" >> $GITHUB_OUTPUT

      - name: Install Skopeo
        run: |
          sudo apt-get update
          sudo apt-get install -y skopeo

      - name: Login to GHCR
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | skopeo login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Sync Multi-Arch Image with --all
        run: |
          SOURCE_IMAGE="${{ steps.vars.outputs.SOURCE_IMAGE }}"
          TARGET_IMAGE="${{ steps.vars.outputs.TARGET_IMAGE }}"
          SOURCE_TAG="${{ steps.vars.outputs.SOURCE_TAG }}"
          TARGET_TAG="${{ steps.vars.outputs.TARGET_TAG }}"
          
          echo "🔄 同步多架构镜像（所有架构）..."
          echo "源镜像: $SOURCE_IMAGE:$SOURCE_TAG"
          echo "目标镜像: $TARGET_IMAGE:$TARGET_TAG"
          
          # 使用 --all 参数同步所有架构
          skopeo copy \
            --src-tls-verify=false \
            --dest-tls-verify=false \
            --all \
            "docker://$SOURCE_IMAGE:$SOURCE_TAG" \
            "docker://$TARGET_IMAGE:$TARGET_TAG"
          
          echo "✅ 多架构镜像同步完成"
